package com.zkhk.contoller;

import java.io.IOException;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.log4j.Logger;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.alibaba.fastjson.JSON;
import com.zkhk.constants.Constants;
import com.zkhk.entity.ReturnResult;
import com.zkhk.services.DocVisitService;
import com.zkhk.util.GzipUtil;
import com.zkhk.util.SystemUtils;

/**
 * @ClassName:     DocVisitController.java 
 * @Description:   医生随访
 * @author         liuxiaoqin  
 * @version        V1.0   
 * @Date           2016年3月14日 上午9:49:44
*****/
@Controller
@RequestMapping("docVisit")
public class DocVisitController {

	private Logger logger = Logger.getLogger(DocVisitController.class);
	
	@Resource(name = "docVisitService")
	private DocVisitService docVisitService;
    
    /** 
     * @Title: findMemDiabetesVisitList 
     * @Description: 医生查询会员的糖尿病随访列表
     * @param request
     * @param response
     * @author liuxiaoqin
     * @createDate 2016-03-14
     * @throws IOException    
     * @retrun void
     */
    @RequestMapping(value="findMemDiabetesVisitList",method=RequestMethod.POST)
    public void findMemDiabetesVisitList(HttpServletRequest request, HttpServletResponse response) throws IOException {
        try{
            String resPString = docVisitService.findMemDiabetesVisitList(request);
            GzipUtil.write(response, resPString);
        }catch(Exception e){
            ReturnResult re = new ReturnResult();
            re.setState(2);
            re.setMessage(SystemUtils.getValue(Constants.GET_DATA_EXCEPTION));
            logger.error("医生查询会员的糖尿病随访列表:"+e);
            response.getWriter().write(JSON.toJSONString(re));
        }
    }
    
    /** 
     * @Title: findMemDiabetesVisitDetail 
     * @Description: 医生查询会员的糖尿病随访明细
     * @param request
     * @author liuxiaoqin
     * @createDate 2016-03-15
     * @throws IOException    
     * @retrun void
     */
    @RequestMapping(value="findMemDiabetesVisitDetail",method=RequestMethod.POST)
    public void findMemDiabetesVisitDetail(HttpServletRequest request, HttpServletResponse response) throws IOException {
        try{
            String resPString = docVisitService.findMemDiabetesVisitDetail(request);
            GzipUtil.write(response, resPString);
        }catch(Exception e){
            ReturnResult re = new ReturnResult();
            re.setState(2);
            re.setMessage(SystemUtils.getValue(Constants.GET_DATA_EXCEPTION));
            logger.error("医生查询会员的糖尿病随访明细异常:"+e);
            response.getWriter().write(JSON.toJSONString(re));
        }
    }
    
    /** 
     * @Title: findMemHypertensionVisitList 
     * @Description: 医生查询会员的高血压随访列表
     * @param request
     * @param response
     * @author liuxiaoqin
     * @createDate 2016-03-14
     * @throws IOException    
     * @retrun void
     */
    @RequestMapping(value="findMemHypertensionVisitList",method=RequestMethod.POST)
    public void findMemHypertensionVisitList(HttpServletRequest request, HttpServletResponse response) throws IOException {
        try{
            String resPString = docVisitService.findMemHypertensionVisitList(request);
            GzipUtil.write(response, resPString);
        }catch(Exception e){
            ReturnResult re = new ReturnResult();
            re.setState(2);
            re.setMessage(SystemUtils.getValue(Constants.GET_DATA_EXCEPTION));
            logger.error("医生查询会员的高血压随访列表异常:"+e);
            response.getWriter().write(JSON.toJSONString(re));
        }
    }
    
    /** 
     * @Title: findMemHypertensionVisitDetail 
     * @Description: 医生查询会员的高血压随访明细
     * @param request
     * @author liuxiaoqin
     * @createDate 2016-03-15
     * @throws IOException    
     * @retrun void
     */
    @RequestMapping(value="findMemHypertensionVisitDetail",method=RequestMethod.POST)
    public void findMemHypertensionVisitDetail(HttpServletRequest request, HttpServletResponse response) throws IOException {
        try{
            String resPString = docVisitService.findMemHypertensionVisitDetail(request);
            GzipUtil.write(response, resPString);
        }catch(Exception e){
            ReturnResult re = new ReturnResult();
            re.setState(2);
            re.setMessage(SystemUtils.getValue(Constants.GET_DATA_EXCEPTION));
            logger.error("医生查询会员的高血压随访明细异常:"+e);
            response.getWriter().write(JSON.toJSONString(re));
        }
    }
    
    /** 
     * @Title: addOrModifyMemHypertensionVisit 
     * @Description: 医生新增或者修改会员的高血压随访
     * @param request
     * @author liuxiaoqin
     * @createDate 2016-03-15
     * @throws IOException    
     * @retrun void
     */
    @RequestMapping(value="addOrModifyMemHypertensionVisit",method=RequestMethod.POST)
    public void addOrModifyMemHypertensionVisit(HttpServletRequest request, HttpServletResponse response) throws IOException {
        try{
            String resPString = docVisitService.addOrModifyMemHypertensionVisit(request);
            GzipUtil.write(response, resPString);
        }catch(Exception e){
            ReturnResult re = new ReturnResult();
            re.setState(2);
            re.setMessage(SystemUtils.getValue(Constants.ADD_DATA_EXCEPTION));
            logger.error("医生新增或者修改会员的高血压随访异常:"+e);
            response.getWriter().write(JSON.toJSONString(re));
        }
    }
    
    /** 
     * @Title: addOrModifyMemDiabetesVisit 
     * @Description: 医生新增或者修改会员的糖尿病随访
     * @param request
     * @author liuxiaoqin
     * @createDate 2016-03-15
     * @throws IOException    
     * @retrun void
     */
    @RequestMapping(value="addOrModifyMemDiabetesVisit",method=RequestMethod.POST)
    public void addOrModifyMemDiabetesVisit(HttpServletRequest request, HttpServletResponse response) throws IOException {
        try{
            String resPString = docVisitService.addOrModifyMemDiabetesVisit(request);
            GzipUtil.write(response, resPString);
        }catch(Exception e){
            ReturnResult re = new ReturnResult();
            re.setState(2);
            re.setMessage(SystemUtils.getValue(Constants.ADD_DATA_EXCEPTION));
            logger.error("医生新增或者修改会员的糖尿病随访异常:"+e);
            response.getWriter().write(JSON.toJSONString(re));
        }
    }
    
    /** 
     * @Title: findCanVisitDiabeteMem 
     * @Description: 医生获取可进行糖尿病随访的会员
     * @param request
     * @author liuxiaoqin
     * @createDate 2016-03-25
     * @throws IOException    
     * @retrun void
     */
    @RequestMapping(value="findCanVisitDiabeteMem",method=RequestMethod.POST)
    public void findCanVisitDiabeteMem(HttpServletRequest request, HttpServletResponse response) throws IOException {
        try{
            String resPString = docVisitService.findCanVisitDiabeteMem(request);
            GzipUtil.write(response, resPString);
        }catch(Exception e){
            ReturnResult re = new ReturnResult();
            re.setState(2);
            re.setMessage(SystemUtils.getValue(Constants.GET_DATA_EXCEPTION));
            logger.error("医生获取可进行随访的会员异常:"+e);
            response.getWriter().write(JSON.toJSONString(re));
        }
    }
    
    /** 
     * @Title: findCanVisitHyperMem 
     * @Description: 医生获取可进行高血压随访的会员
     * @param request
     * @author liuxiaoqin
     * @createDate 2016-03-25
     * @throws IOException    
     * @retrun void
     */
    @RequestMapping(value="findCanVisitHyperMem",method=RequestMethod.POST)
    public void findCanVisitHyperMem(HttpServletRequest request, HttpServletResponse response) throws IOException {
        try{
            String resPString = docVisitService.findCanVisitHyperMem(request);
            GzipUtil.write(response, resPString);
        }catch(Exception e){
            ReturnResult re = new ReturnResult();
            re.setState(2);
            re.setMessage(SystemUtils.getValue(Constants.GET_DATA_EXCEPTION));
            logger.error("医生获取可进行高血压随访的会员异常:"+e);
            response.getWriter().write(JSON.toJSONString(re));
        }
    }
    
}
