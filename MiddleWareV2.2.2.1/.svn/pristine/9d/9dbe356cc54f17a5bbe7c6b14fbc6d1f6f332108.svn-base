package com.zkhk.services;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;
import org.springframework.stereotype.Service;

import com.alibaba.fastjson.JSON;
import com.hkbithealth.bean.ph.PHDictitem;
import com.hkbithealth.service.ph.PhDictionaryService;
import com.hkbithealth.util.CacheUtil;
import com.zkhk.constants.Constants;
import com.zkhk.dao.DataDicDao;
import com.zkhk.entity.ReturnResult;

@Service("dataDicService")
public class DataDicServiceImpl implements DataDicService {

	private Logger logger = Logger.getLogger(DataDicServiceImpl.class);
	
	private PhDictionaryService dictionaryService = PhDictionaryService.getInstance();
	
	@Resource(name = "dataDicDao")
	private DataDicDao dataDicDao;
	
	/** 
     * @Title: findAllDictionary 
     * @Description: 查询所有字典【健康体检和随访】
     * @param request
     * @author liuxiaoqin
     * @createDate 2016-03-14
     * @throws IOException    
     * @retrun String
     */
    public String findAllDictionary(HttpServletRequest request) throws Exception{
        ReturnResult result = new ReturnResult();
        Map<String, List<PHDictitem>> map = dictionaryService.findAllSecond();
        Map<String, List<PHDictitem>> newMap = new HashMap<String, List<PHDictitem>>();
        if(map.size() > 0){
            newMap.put("hyperSymptom", map.get("高血压随访JOINT症状"));
            newMap.put("hyperPsychologicalAdjust", map.get("高血压随访_生活方式指导JOINT心理调整"));
            newMap.put("hyperVisitType", map.get("高血压随访JOINT随访方式"));
            newMap.put("hyperComplianceBehavior", map.get("高血压随访_生活方式指导JOINT遵医行为"));
            newMap.put("hyperSaltIntake", map.get("高血压随访JOINT摄盐情况(咸淡)"));
            newMap.put("hyperMedicationCompliance", map.get("高血压随访JOINT服药依从性"));
            newMap.put("hyperAdverseDrugReactions", map.get("高血压随访JOINT药物不良反应"));
            newMap.put("hyperVisitClass", map.get("高血压随访JOINT此次随访分类"));
            newMap.put("diabetesVisitType", map.get("2型糖尿病随访JOINT随访方式"));
            newMap.put("diabetesHypoglycemicReaction", map.get("2型糖尿病随访JOINT低血糖反应"));
            newMap.put("diabetesSymptom", map.get("2型糖尿病随访JOINT症状"));
            newMap.put("diabetesPsychologicalAdjust", map.get("2型糖尿病随访_生活方式指导JOINT心理调整"));
            newMap.put("diabetesVisitClass", map.get("2型糖尿病随访JOINT此次随访分类"));
            newMap.put("diabetesMedicationCompliance", map.get("2型糖尿病随访JOINT服药依从性"));
            newMap.put("diabetesAdverseDrugReactions", map.get("2型糖尿病随访JOINT药物不良反应"));
            newMap.put("diabetesDorsalArterialPulse", map.get("2型糖尿病随访_体征JOINT足背动脉搏动"));
            newMap.put("diabetesComplianceBehavior", map.get("2型糖尿病随访_生活方式指导JOINT遵医行为"));
            result.setState(0);
            result.setMessage("查询所有字典【健康体检和随访】成功");
            result.setContent(newMap);
            logger.info("查询所有字典【健康体检和随访】成功");
        }else{
            result.setState(3);
            result.setMessage("查询不到所有字典【健康体检和随访】");
            logger.info("查询不到所有字典【健康体检和随访】");
        }
        return JSON.toJSONString(result);
    }
    
    /** 
     * @Title: findDiseaseDictionary 
     * @Description: 查询疾病史字典
     * @param request
     * @author liuxiaoqin
     * @createDate 2016-03-22
     * @throws IOException    
     * @retrun String
     */
    public String findDiseaseDictionary(HttpServletRequest request) throws Exception{
        ReturnResult result = new ReturnResult();
        Object dictionary = CacheUtil.getCache(Constants.DIESASE_DICTIONARY_CACHE, Constants.DIESASE_DICTIONARY_KEY);
        if(dictionary == null){
            Map<String, Object> map = new HashMap<String, Object>();
            List<Map<String,Object>> list = dataDicDao.findDiseaseDictionary();
            if(list.size() > 0){
                map.put("diseaseDictionary", list);
                CacheUtil.setCache(Constants.DIESASE_DICTIONARY_CACHE, Constants.DIESASE_DICTIONARY_KEY, map);
                result.setState(0);
                result.setMessage("查询疾病史字典成功");
                result.setContent(map);
                logger.info("查询疾病史字典成功");
            }else{
                result.setState(3);
                result.setMessage("查询不到疾病史字典");
                logger.info("查询不到疾病史字典");
            }
        }else{
            result.setState(0);
            result.setMessage("查询疾病史字典成功");
            result.setContent(dictionary);
            logger.info("查询疾病史字典成功");
        }
        
        return JSON.toJSONString(result);
    }
    
}
